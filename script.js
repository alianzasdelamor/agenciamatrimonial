// Esperar a que el documento HTML est√© completamente cargado y listo
document.addEventListener("DOMContentLoaded", function () {
    // ‚ö†Ô∏è C√ìDIGO NUEVO PARA FIJAR SCROLL
    window.scrollTo(0, 0);
    history.scrollRestoration = "manual";
    /*
    üìå INICIALIZACI√ìN DE ANIMACIONES CON AOS
    AOS (Animate On Scroll) es una biblioteca para animaciones al hacer scroll
    Configuramos sus par√°metros:
    - duration: Duraci√≥n de la animaci√≥n en milisegundos (1 segundo)
    - once: La animaci√≥n solo se reproduce una vez
    - delay: Retardo antes de que comience la animaci√≥n
    - easing: Tipo de suavizado de la animaci√≥n
    - mirror: No repetir la animaci√≥n al volver a scroll
    */
    AOS.init({
        duration: 1000,         // 1 segundo de duraci√≥n
        once: true,             // Animaci√≥n √∫nica por elemento
        delay: 150,             // 150ms de retardo inicial
        easing: 'ease-in-out',  // Movimiento suave al empezar y terminar
        mirror: false           // No animar al hacer scroll inverso
    });

    // üéØ BOT√ìN "VOLVER ARRIBA"
    const backToTopButton = document.getElementById("back-to-top");

    // Detectar cuando el usuario hace scroll
    window.addEventListener("scroll", function () {
        // Mostrar el bot√≥n solo si el scroll vertical es mayor a 300px
        if (window.scrollY > 300) {
            backToTopButton.style.display = "block";
        } else {
            backToTopButton.style.display = "none";
        }
    });

    // Acci√≥n al hacer clic en el bot√≥n
    backToTopButton.addEventListener("click", function () {
        // Scroll suave hasta la parte superior de la p√°gina
        window.scrollTo({ 
            top: 0,              // Posici√≥n final (0px = inicio)
            behavior: "smooth"  // Desplazamiento animado
        });
    });

    // üìß VALIDACI√ìN DE FORMULARIO
    const form = document.querySelector("form");
    
    // Evento que se ejecuta al enviar el formulario
    form.addEventListener("submit", function (event) {
        // 1. Buscamos el campo de email en el formulario
        const emailInput = form.querySelector("input[type='email']");
        
        // 2. Verificamos si el email es v√°lido
        if (!validateEmail(emailInput.value)) {
            event.preventDefault(); // Detenemos el env√≠o del formulario
            alert("Por favor, introduce un email v√°lido.");
        } else {
            alert("¬°Gracias por registrarte! Te contactaremos pronto.");
        }
    });

    // Funci√≥n para validar formato de email con Expresi√≥n Regular
    function validateEmail(email) {
        // La expresi√≥n regular verifica: texto@texto.texto
        return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }

   // üåÑ EFECTO PARALLAX EN LA IMAGEN PRINCIPAL (VERSI√ìN SIMPLIFICADA)
window.addEventListener("scroll", function () {
    const img = document.querySelector(".hero-img img");
    
    if (img) {
        let scrollY = window.scrollY;
        // Solo aplicamos desplazamiento vertical (quitamos rotateZ)
        img.style.transform = `translateY(${scrollY * 0.03}px)`; 
    }
});

    // üñ±Ô∏è SCROLL SUAVE PARA ENLACES DE NAVEGACI√ìN
    // Seleccionamos todos los enlaces que empiezan con #
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        // A cada enlace le a√±adimos un evento click
        anchor.addEventListener('click', function (e) {
            e.preventDefault(); // Evitamos el comportamiento normal del enlace
            
            // Hacemos scroll suave hasta el elemento objetivo
            document.querySelector(this.getAttribute('href')).scrollIntoView({
                behavior: 'smooth' // Animaci√≥n de desplazamiento
            });
        });
    });
});
